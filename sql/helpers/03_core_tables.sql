-- Core/Base Tables (22) ----

---- 3.1 users & staff ----
DROP TABLE IF EXISTS SUPER_ADMIN, ADMIN, FRONT_DESK, FLOOR_MANAGER, MANAGER, TRAINER, STAFF, USER;

CREATE TABLE USER (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  username VARCHAR(100) NOT NULL UNIQUE,
  email    VARCHAR(255) NOT NULL UNIQUE,
  password_hash VARCHAR(255) NOT NULL,      -- argon2id for now
  password_algo VARCHAR(32)  NOT NULL,      -- e.g., 'argon2id'
  password_updated_at DATETIME(6) NULL,
  last_login_at DATETIME(6) NULL,
  profile_photo_path VARCHAR(512) NULL,     -- some default.jpg image when NULL
  status_id BIGINT NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_user_status FOREIGN KEY (status_id) REFERENCES ACCOUNT_STATUS_IND(id)
) ENGINE=InnoDB;

CREATE TABLE STAFF (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id BIGINT NOT NULL UNIQUE,
  gym_id  BIGINT NOT NULL,
  status_id BIGINT NOT NULL,
  notes TEXT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_staff_user  FOREIGN KEY (user_id) REFERENCES USER(id),
  CONSTRAINT fk_staff_status FOREIGN KEY (status_id) REFERENCES ACCOUNT_STATUS_IND(id)
) ENGINE=InnoDB;

CREATE TABLE TRAINER (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  staff_id BIGINT NOT NULL UNIQUE,
  certification VARCHAR(255) NULL,
  bio TEXT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_trainer_staff FOREIGN KEY (staff_id) REFERENCES STAFF(id) ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE TABLE MANAGER (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  staff_id BIGINT NOT NULL UNIQUE,
  scope ENUM('gym') NOT NULL DEFAULT 'gym',
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_manager_staff FOREIGN KEY (staff_id) REFERENCES STAFF(id) ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE TABLE FLOOR_MANAGER (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  staff_id BIGINT NOT NULL UNIQUE,
  scope ENUM('equipment') NOT NULL DEFAULT 'equipment',
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_fmgr_staff FOREIGN KEY (staff_id) REFERENCES STAFF(id) ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE TABLE FRONT_DESK (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  staff_id BIGINT NOT NULL UNIQUE,
  capabilities SET('check_in','register') NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_frontdesk_staff FOREIGN KEY (staff_id) REFERENCES STAFF(id) ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE TABLE ADMIN (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  staff_id BIGINT NOT NULL UNIQUE,
  scope ENUM('gym') NOT NULL DEFAULT 'gym',
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_admin_staff FOREIGN KEY (staff_id) REFERENCES STAFF(id) ON DELETE CASCADE
) ENGINE=InnoDB;

CREATE TABLE SUPER_ADMIN (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id BIGINT NOT NULL UNIQUE,
  scope ENUM('global') NOT NULL DEFAULT 'global',
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_superadmin_user FOREIGN KEY (user_id) REFERENCES USER(id)
) ENGINE=InnoDB;

---- 3.2 gyms & equipment ----
DROP TABLE IF EXISTS SERVICE_LOG, INVENTORY_COUNT, EQUIPMENT_ITEM, EQUIP_KIND, GYM;

CREATE TABLE GYM (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL,
  address VARCHAR(512) NOT NULL,
  status_id BIGINT NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_gym_status FOREIGN KEY (status_id) REFERENCES GYM_STATUS_IND(id)
) ENGINE=InnoDB;

CREATE TABLE EQUIP_KIND (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL UNIQUE,
  mode ENUM('per_item','bulk') NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)
) ENGINE=InnoDB;

CREATE TABLE EQUIPMENT_ITEM (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  gym_id BIGINT NOT NULL,
  equip_kind_id BIGINT NOT NULL,
  status_id BIGINT NOT NULL,
  serial_no VARCHAR(255) NULL,
  uses_count INT NOT NULL DEFAULT 0,
  rated_uses INT NOT NULL DEFAULT 10000,
  last_serviced_at DATETIME(6) NULL,
  last_cleaned_at DATETIME(6) NULL,
  cleaning_interval_uses INT NOT NULL DEFAULT 1000,
  cleaning_interval_days INT NOT NULL DEFAULT 30,
  next_clean_due_at DATETIME(6) NULL,
  service_required BOOLEAN NOT NULL DEFAULT FALSE,
  cleaning_required BOOLEAN NOT NULL DEFAULT FALSE,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_eitem_gym   FOREIGN KEY (gym_id) REFERENCES GYM(id),
  CONSTRAINT fk_eitem_kind  FOREIGN KEY (equip_kind_id) REFERENCES EQUIP_KIND(id),
  CONSTRAINT fk_eitem_stat  FOREIGN KEY (status_id) REFERENCES EQUIPMENT_STATUS_IND(id),
  UNIQUE KEY uk_eitem_serial_per_gym (gym_id, serial_no)
) ENGINE=InnoDB;

CREATE TABLE INVENTORY_COUNT (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  gym_id BIGINT NOT NULL,
  equip_kind_id BIGINT NOT NULL,
  qty_on_floor INT NOT NULL DEFAULT 0,
  qty_in_storage INT NOT NULL DEFAULT 0,
  reorder_needed BOOLEAN NOT NULL DEFAULT FALSE,
  updated_snapshot_at DATETIME(6) NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_invc_gym  FOREIGN KEY (gym_id) REFERENCES GYM(id),
  CONSTRAINT fk_invc_kind FOREIGN KEY (equip_kind_id) REFERENCES EQUIP_KIND(id),
  UNIQUE KEY uk_invc_gym_kind (gym_id, equip_kind_id),
  CHECK (qty_on_floor >= 0 AND qty_in_storage >= 0)
) ENGINE=InnoDB;

CREATE TABLE SERVICE_LOG (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  equipment_item_id BIGINT NOT NULL,
  serviced_at DATETIME(6) NOT NULL,
  action ENUM('inspect','repair','replace','clean') NOT NULL,
  notes TEXT NULL,
  staff_id BIGINT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_slog_item FOREIGN KEY (equipment_item_id) REFERENCES EQUIPMENT_ITEM(id) ON DELETE RESTRICT,
  CONSTRAINT fk_slog_staff FOREIGN KEY (staff_id) REFERENCES STAFF(id) ON DELETE SET NULL
) ENGINE=InnoDB;

---- 3.3 classes & availability ----
DROP TABLE IF EXISTS SESSION_EQUIP_RESERVATION, SESSION_TRAINER, TRAINER_AVAIL_DATE, CLASS_SESSION;

CREATE TABLE CLASS_SESSION (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  gym_id BIGINT NOT NULL,
  title VARCHAR(255) NOT NULL,
  description TEXT NULL,
  starts_at DATETIME(6) NOT NULL,
  ends_at   DATETIME(6) NOT NULL,
  capacity INT NOT NULL CHECK (capacity > 0),
  max_trainers INT NOT NULL DEFAULT 1,
  open_for_booking BOOLEAN NOT NULL DEFAULT TRUE,
  status_id BIGINT NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_csess_gym FOREIGN KEY (gym_id) REFERENCES GYM(id),
  CONSTRAINT fk_csess_status FOREIGN KEY (status_id) REFERENCES SESSION_STATUS_IND(id),
  CHECK (ends_at > starts_at)
) ENGINE=InnoDB;

CREATE TABLE TRAINER_AVAIL_DATE (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  trainer_id BIGINT NOT NULL,
  gym_id BIGINT NOT NULL,
  for_date DATE NOT NULL,
  period ENUM('AM','PM') NOT NULL,
  status_id BIGINT NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_tavail_tr FOREIGN KEY (trainer_id) REFERENCES TRAINER(id),
  CONSTRAINT fk_tavail_gym FOREIGN KEY (gym_id) REFERENCES GYM(id),
  CONSTRAINT fk_tavail_status FOREIGN KEY (status_id) REFERENCES AVAILABILITY_STATUS_IND(id),
  UNIQUE KEY uk_tavail_trainer_date_period (trainer_id, for_date, period)
) ENGINE=InnoDB;

-- Surrogate PK simplifies auditing; keep natural uniqueness as a UNIQUE key.
CREATE TABLE SESSION_TRAINER (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  session_id BIGINT NOT NULL,
  trainer_id BIGINT NOT NULL,
  role ENUM('lead','assistant') NOT NULL DEFAULT 'lead',
  assigned_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  UNIQUE KEY uk_session_trainer (session_id, trainer_id),
  CONSTRAINT fk_strainer_session FOREIGN KEY (session_id) REFERENCES CLASS_SESSION(id) ON DELETE CASCADE,
  CONSTRAINT fk_strainer_trainer FOREIGN KEY (trainer_id) REFERENCES TRAINER(id) ON DELETE RESTRICT
) ENGINE=InnoDB;

CREATE TABLE SESSION_EQUIP_RESERVATION (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  session_id BIGINT NOT NULL,
  equip_kind_id BIGINT NOT NULL,
  quantity INT NOT NULL DEFAULT 0 CHECK (quantity >= 0),
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  UNIQUE KEY uk_session_equip_kind (session_id, equip_kind_id),
  CONSTRAINT fk_sereq_session FOREIGN KEY (session_id) REFERENCES CLASS_SESSION(id) ON DELETE CASCADE,
  CONSTRAINT fk_sereq_kind FOREIGN KEY (equip_kind_id) REFERENCES EQUIP_KIND(id)
) ENGINE=InnoDB;

---- 3.4 memberships, cards & check-ins ----
DROP TABLE IF EXISTS CHECK_IN, ACCESS_CARD, BOOKING, MEMBER, MEMBERSHIP_PLAN;

CREATE TABLE MEMBERSHIP_PLAN (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  name VARCHAR(255) NOT NULL UNIQUE,
  tier ENUM('trial','basic','plus') NOT NULL,
  billing_cycle ENUM('monthly','annual') NOT NULL,
  price DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  status_id BIGINT NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_mplan_status FOREIGN KEY (status_id) REFERENCES PLAN_STATUS_IND(id)
) ENGINE=InnoDB;

CREATE TABLE MEMBER (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  user_id BIGINT NOT NULL UNIQUE,
  membership_plan_id BIGINT NOT NULL,
  home_gym_id BIGINT NULL, -- trial/basic home gym; plus can be NULL (any gym); will check MEMBERSHIP_PLAN table in queries
  joined_on DATE NOT NULL,
  trial_expires_on DATE NULL,
  status_id BIGINT NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_member_user FOREIGN KEY (user_id) REFERENCES USER(id),
  CONSTRAINT fk_member_plan FOREIGN KEY (membership_plan_id) REFERENCES MEMBERSHIP_PLAN(id),
  CONSTRAINT fk_member_status FOREIGN KEY (status_id) REFERENCES ACCOUNT_STATUS_IND(id),
  CONSTRAINT fk_member_home_gym FOREIGN KEY (home_gym_id) REFERENCES GYM(id)
) ENGINE=InnoDB;

CREATE TABLE BOOKING (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  session_id BIGINT NOT NULL,
  member_id  BIGINT NOT NULL,
  status_id  BIGINT NOT NULL,
  booked_at  DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  cancellation_reason VARCHAR(255) NULL,
  notes TEXT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  UNIQUE KEY uk_booking_member_session (member_id, session_id),
  CONSTRAINT fk_booking_session FOREIGN KEY (session_id) REFERENCES CLASS_SESSION(id) ON DELETE RESTRICT,
  CONSTRAINT fk_booking_member  FOREIGN KEY (member_id)  REFERENCES MEMBER(id) ON DELETE RESTRICT,
  CONSTRAINT fk_booking_status  FOREIGN KEY (status_id)  REFERENCES BOOKING_STATUS_IND(id)
) ENGINE=InnoDB;

CREATE TABLE ACCESS_CARD (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  member_id BIGINT NOT NULL,
  gym_id BIGINT NOT NULL,
  card_uid VARCHAR(128) NOT NULL UNIQUE,
  status_id BIGINT NOT NULL,
  issued_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  revoked_at DATETIME(6) NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_card_member FOREIGN KEY (member_id) REFERENCES MEMBER(id),
  CONSTRAINT fk_card_gym    FOREIGN KEY (gym_id) REFERENCES GYM(id),
  CONSTRAINT fk_card_status FOREIGN KEY (status_id) REFERENCES ACCESS_CARD_STATUS_IND(id)
) ENGINE=InnoDB;

CREATE TABLE CHECK_IN (
  id BIGINT PRIMARY KEY AUTO_INCREMENT,
  member_id BIGINT NOT NULL,
  gym_id BIGINT NOT NULL,
  access_card_id BIGINT NULL,
  checked_in_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  method ENUM('scan','manual') NOT NULL,
  created_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6),
  updated_at DATETIME(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6),
  CONSTRAINT fk_checkin_member FOREIGN KEY (member_id) REFERENCES MEMBER(id),
  CONSTRAINT fk_checkin_gym    FOREIGN KEY (gym_id)    REFERENCES GYM(id),
  CONSTRAINT fk_checkin_card   FOREIGN KEY (access_card_id) REFERENCES ACCESS_CARD(id)
) ENGINE=InnoDB;